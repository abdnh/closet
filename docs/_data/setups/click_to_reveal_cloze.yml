name: Click to reveal cloze
code: |
  closet.browser.appendStyleTag(`
  .cl--obscure-hint {
    filter: blur(0.25em);
  }

  .cl--obscure-fix::after {
    content: 'XXXXXXXXXX';
    filter: blur(0.25em);
  }

  .cl--obscure-fix > span {
    display: none;
  }`)

  const removeObscure = function(event) {
    if (event.currentTarget.classList.contains('cl--obscure-clickable')) {
      event.currentTarget.classList.remove('cl--obscure')
      event.currentTarget.classList.remove('cl--obscure-hint')
      event.currentTarget.classList.remove('cl--obscure-fix')
    }
  }

  const wrappedCloze= closet.wrappers.aftermath(closet.flashcard.recipes.cloze, () => {
    document.querySelectorAll('.cl--obscure')
    .forEach(tag => {
      tag.addEventListener('click', removeObscure, {
        once: true,
      })
    })
  })

  const obscureAndClick = (t) => {
    return [`<span class="cl--obscure cl--obscure-hint cl--obscure-clickable">${t.values[0]}</span>`]
  }

  const obscureAndClickFix = (t) => {
    return [`<span class="cl--obscure cl--obscure-fix cl--obscure-clickable"><span>${t.values[0]}</span></span>`]
  }

  const frontStylizer = closet.Stylizer.make({
    processor: v => `<span style="color: cornflowerblue">${v}</span>`,
  })

  filterManager.install(
    wrappedCloze({
      tagname: 'c',
      frontEllipser: obscureAndClick,
      frontStylizer: frontStylizer,
    }),

    wrappedCloze({
      tagname: 'cx',
      frontEllipser: obscureAndClickFix,
      frontStylizer: frontStylizer,
    }),
  )
